{"ast":null,"code":"var _jsxFileName = \"D:\\\\songGit\\\\tagon\\\\client\\\\src\\\\components\\\\head\\\\Header.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.callApi();\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/customerChart', {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json'\n        }\n      });\n      const body = await response.json();\n      this.makeData(body);\n    };\n\n    this.makeData = item => {\n      const arr = item.reduce((acc, cur) => {\n        const findItem = acc.find(a => a.ID === cur.ID && a.JOB === cur.JOB && a.COUNT === cur.COUNT);\n\n        if (!findItem) {\n          acc.push({\n            ID: cur.ID,\n            JOB: cur.JOB,\n            COUNT: cur.COUNT\n          });\n        }\n\n        if (findItem && findItem.COUNT !== cur.COUNT) {\n          findItem.ID = cur.ID;\n          findItem.JOB = cur.JOB;\n          findItem.COUNT = cur.COUNT;\n        }\n\n        return acc;\n      }, []);\n      let items = arr.map(c => `${c.JOB}`);\n      this.setState({\n        items: items\n      });\n    };\n\n    this.radioChange = e => {\n      var checkList = [];\n      const query = 'input[name=\"category\"]:checked';\n      const selected = document.querySelectorAll(query);\n      selected.forEach(function (i) {\n        checkList.push(i.value);\n      });\n      this.props.call(checkList);\n    };\n\n    this.state = {\n      items: [],\n      types: ['line', 'bar']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.items ? this.state.items.map((contact, i) => {\n          return /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"category\",\n              value: contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 36\n            }, this), contact]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this);\n        }) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.types ? this.state.types.map((contact, i) => {\n          let result;\n\n          if ({\n            i\n          }.i === 0) {\n            result = /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"type\",\n                value: contact,\n                onChange: this.radioChange,\n                defaultChecked: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this), contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 38\n            }, this);\n          } else {\n            result = /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"type\",\n                value: contact,\n                onChange: this.radioChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this), contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 38\n            }, this);\n          }\n\n          return result;\n        }) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["D:/songGit/tagon/client/src/components/head/Header.js"],"names":["React","Header","Component","constructor","props","componentDidMount","callApi","response","fetch","method","headers","body","json","makeData","item","arr","reduce","acc","cur","findItem","find","a","ID","JOB","COUNT","push","items","map","c","setState","radioChange","e","checkList","query","selected","document","querySelectorAll","forEach","i","value","call","state","types","render","contact","result"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items : []\r\n        ,   types : ['line', 'bar']\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.callApi();\r\n    }\r\n\r\n    callApi = async () => {\r\n        const response = await fetch('/api/customerChart', { \r\n            method : \"POST\"\r\n        ,   headers : {\r\n                'Content-type' : 'application/json'\r\n            }\r\n        });\r\n        const body = await response.json();\r\n\r\n        this.makeData(body);\r\n    }\r\n\r\n    makeData = (item) => {\r\n        const arr = item.reduce((acc, cur) => {\r\n        const findItem = acc.find(a => a.ID === cur.ID && a.JOB === cur.JOB && a.COUNT === cur.COUNT);\r\n\r\n        if(!findItem) {\r\n            acc.push({\r\n                ID : cur.ID\r\n            ,   JOB : cur.JOB\r\n            ,   COUNT : cur.COUNT\r\n            });\r\n        }\r\n        if(findItem && findItem.COUNT !== cur.COUNT) {\r\n            findItem.ID = cur.ID;\r\n            findItem.JOB = cur.JOB;\r\n            findItem.COUNT = cur.COUNT;\r\n        }\r\n        \r\n        return acc;\r\n        }, [])\r\n\r\n        let items = arr.map(c => `${c.JOB}`);\r\n\r\n        this.setState({\r\n            items : items\r\n        })\r\n    }\r\n\r\n    radioChange = (e) => {\r\n        var checkList = [];\r\n\r\n        const query = 'input[name=\"category\"]:checked';\r\n        const selected = document.querySelectorAll(query);\r\n        selected.forEach(function(i) {\r\n            checkList.push(i.value);\r\n        })\r\n\r\n        this.props.call(checkList);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>  \r\n                <div>\r\n                {\r\n                    this.state.items ? this.state.items.map((contact, i) => {\r\n                        return (\r\n                            <label><input type='checkbox' name='category' value={contact} />{contact}</label>\r\n                        );\r\n                    }) : \"\"\r\n                }\r\n                </div>\r\n                <div>\r\n                {\r\n                    this.state.types ? this.state.types.map((contact, i) => {\r\n                        let result;\r\n\r\n                        if({i}.i === 0) {\r\n                            result = <label><input type='radio' name='type' value={contact} onChange={this.radioChange} defaultChecked />{contact}</label>;\r\n                        }\r\n                        else {\r\n                            result = <label><input type='radio' name='type' value={contact} onChange={this.radioChange} />{contact}</label>;\r\n                        }\r\n\r\n                        return result;\r\n                    }) : \"\"\r\n                }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}